<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2024-11-12 16:34:38">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Global">global</application>
<application_name>Global</application_name>
<application_scope>global</application_scope>
<application_version/>
<collisions/>
<commit_date/>
<deleted/>
<description/>
<inserted/>
<name>HGC-User-Scan-Fixscript</name>
<origin_sys_id/>
<parent display_value=""/>
<release_date/>
<remote_base_update_set display_value=""/>
<remote_parent_id/>
<remote_sys_id>2142eaf853395210cad350c0a0490e7e</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2024-11-12 16:34:38</sys_created_on>
<sys_id>3396d2ca53f55210cad350c0a0490ef6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2024-11-12 16:34:38</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sys_script_fix_6a72eef853395210cad350c0a0490e79</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;&lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;&lt;before&gt;false&lt;/before&gt;&lt;description/&gt;&lt;name&gt;HGC-User-Scanner&lt;/name&gt;&lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;&lt;script&gt;&lt;![CDATA[var instanceDomain = gs.getProperty('glide.servlet.uri')
var newUser = new GlideRecord('sys_user');
newUser.initialize();
newUser.user_name = 'hgc_scan_user';
newUser.active = true; // Set user as active
newUser.web_service_access_only=true;

// Insert the user record
var userID = newUser.insert();
if (userID) {

var userSysId =userID;
// Generate or define the plaintext password
var newPassword = 'Scan-Password2024!'; // Example plaintext password
var result = SNC.PasswordPolicyEvaluator.setUserPassword(newUser.user_name, newPassword);
// Query the user record
if(result){
    gs.print("result:"+result);
}      
//  Grant the admin role to the user

// Retrieve the sys_id of the "admin" and "snc_read_only" role dynamically
    var roleGr = new GlideRecord('sys_user_role');
    roleGr.addEncodedQuery('name=admin^ORname=snc_read_only')
    roleGr.query();
    while (roleGr.next()) {
        var adminRoleSysId = roleGr.sys_id.toString(); 
        var userRole = new GlideRecord('sys_user_has_role');
        userRole.initialize();
        userRole.user = userSysId; 
        userRole.role = adminRoleSysId; 
        if (userRole.insert()) {
            gs.print('Admin role granted successfully to user: ' + userSysId);
        } else {
            gs.print('Failed to grant admin role to user: ' + userSysId);
        }
    } 
// Construct the URL to the user record
var userUrl = instanceDomain + 'sys_user.do?sys_id=' + userSysId;

// Use gs.addInfoMessage to render the URL as a clickable link
    gs.info('User created successfully: ' + userUrl);
} else {
    gs.info('Failed to create user');
}


var appRegistry = new GlideRecord('oauth_entity');
appRegistry.initialize();
appRegistry.setValue('name', 'HGC Scan Api Endpoint'); // Set a name for the registry
appRegistry.setValue('client_id', gs.generateGUID()); // Generate a unique Client ID
appRegistry.setValue('client_secret', gs.generateGUID()); // Generate a unique Client Secret
appRegistry.setValue('grant_types', 'authorization_code password client_credentials'); // Define grant types
appRegistry.setValue('active', true); // Activate the registry

// Insert the record
var appRegistryID = appRegistry.insert();
if (appRegistryID) {
    // Retrieve the created record
    var createdApp = new GlideRecord('oauth_entity');
	var appRegistryUrl = instanceDomain + 'nav_to.do?uri=oauth_entity.do?sys_id=' + appRegistryID;
	gs.info('Application registry created successfully: ' +  appRegistryUrl );
   
} else {
    gs.print('Failed to create Application Registry.');
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-11-08 20:15:43&lt;/sys_created_on&gt;&lt;sys_id&gt;6a72eef853395210cad350c0a0490e79&lt;/sys_id&gt;&lt;sys_mod_count&gt;20&lt;/sys_mod_count&gt;&lt;sys_name&gt;HGC-User-Scanner&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_fix_6a72eef853395210cad350c0a0490e79&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-11-12 16:14:56&lt;/sys_updated_on&gt;&lt;unloadable&gt;false&lt;/unloadable&gt;&lt;/sys_script_fix&gt;&lt;/record_update&gt;</payload>
<payload_hash>-652352024</payload_hash>
<remote_update_set display_value="HGC-Phil-Scan-Fixscript">3396d2ca53f55210cad350c0a0490ef6</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2024-11-12 16:34:38</sys_created_on>
<sys_id>3796d2ca53f55210cad350c0a0490ef6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>1932128199b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2024-11-12 16:34:38</sys_updated_on>
<table/>
<target_name>HGC-User-Scanner</target_name>
<type>Fix Script</type>
<update_domain>global</update_domain>
<update_guid>53125a0ac6f55210068ebec4fd691f4a</update_guid>
<update_guid_history>53125a0ac6f55210068ebec4fd691f4a:-652352024,72a19e4208f5521043f16a266819f933:-1530311321,1b11d6c6faf5521070bcb3c2be1f11ff:-1622128870,3a909e4286f55210c4d4a0ab4e181a0e:1660406874,dd320a3556751210cacdd3da3fc95e74:2056002939,0dedf9fd34351210dd87dc94cfdcd5e4:899147635,247d31bdbb351210b943e60cd4be9c27:720309855,f2ec39bd953512108c013e6bc9c65ce5:-46716143,cf8cb9bde2351210c8f22d896139d59f:1320026318,108b357d243512103added216489f791:759257106,570b3d75df3512104a1c1ebdfcb49836:1555751655,e66635b5463512105b14059646d05b76:581128360,3115f9755e351210aa58257d5c0c4e21:1060705873,f5347db1ab3512106f0fd42fd134d70a:-547412195,759375353c351210317336944bdcf425:-377556820,5713f9f1a33512104980ff496ed23ca0:567830450,a3523d71aa351210e7a5f25313b84eb5:-764715752,8881f53125351210ee0d3cd3d42c5818:-610186916,99507d7d59f11210b20d9f3552d9c423:567830450,a22bed7968f1121061e1f7a431015fb3:1058705109,47d2a63c673952108bd37cbe4f71481c:402794191</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
